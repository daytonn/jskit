{
    "project": {
        "name": "JSkit",
        "description": "JSkit is a tiny library to thicken up jQuery soup.",
        "version": "4.0.0",
        "url": "http://daytonn.github.io/jskit"
    },
    "files": {
        "src/application.js": {
            "name": "src/application.js",
            "modules": {
                "JSkit": 1
            },
            "classes": {
                "Application": 1,
                "ControllerFactory": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/controller.js": {
            "name": "src/controller.js",
            "modules": {},
            "classes": {
                "Controller": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/dispatcher.js": {
            "name": "src/dispatcher.js",
            "modules": {},
            "classes": {
                "Dispatcher": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/jskit.js": {
            "name": "src/jskit.js",
            "modules": {},
            "classes": {
                "JSkit": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "JSkit": {
            "name": "JSkit",
            "submodules": {},
            "elements": {},
            "classes": {
                "Application": 1,
                "ControllerFactory": 1,
                "Controller": 1,
                "Dispatcher": 1,
                "JSkit": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/jskit.js",
            "line": 1
        }
    },
    "classes": {
        "Application": {
            "name": "Application",
            "shortname": "Application",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "JSkit",
            "namespace": "",
            "file": "src/application.js",
            "line": 1
        },
        "ControllerFactory": {
            "name": "ControllerFactory",
            "shortname": "ControllerFactory",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "JSkit",
            "namespace": "",
            "file": "src/application.js",
            "line": 74
        },
        "Controller": {
            "name": "Controller",
            "shortname": "Controller",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "JSkit",
            "namespace": "",
            "file": "src/controller.js",
            "line": 1
        },
        "Dispatcher": {
            "name": "Dispatcher",
            "shortname": "Dispatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "JSkit",
            "namespace": "",
            "file": "src/dispatcher.js",
            "line": 1
        },
        "JSkit": {
            "name": "JSkit",
            "shortname": "JSkit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "JSkit",
            "namespace": "",
            "file": "src/jskit.js",
            "line": 1,
            "description": "JSkit global namespace object"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src/application.js",
            "line": 9,
            "description": "Takes a string and creates a constant name\nby uppercasing and camel-casing each word\ndelimited by a space.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "constantize",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"\""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Application",
            "module": "JSkit"
        },
        {
            "file": "src/application.js",
            "line": 33,
            "description": "Creates a new application object.",
            "itemtype": "method",
            "name": "create",
            "static": 1,
            "return": {
                "description": "Application object",
                "type": "Object"
            },
            "class": "Application",
            "module": "JSkit"
        },
        {
            "file": "src/application.js",
            "line": 43,
            "description": "Controllers namespace to store Controller objects built at runtime",
            "itemtype": "property",
            "name": "Controllers",
            "type": "Object",
            "default": "{}",
            "class": "Application",
            "module": "JSkit"
        },
        {
            "file": "src/application.js",
            "line": 51,
            "description": "Dispatcher to subcribe and publish events",
            "itemtype": "property",
            "name": "Dispatcher",
            "type": "Dispatcher",
            "default": "Dispatcher",
            "class": "Application",
            "module": "JSkit"
        },
        {
            "file": "src/application.js",
            "line": 59,
            "description": "Creates a controller with the given name and attributes\nand returns it. It also saves a reference to the Controller\nfactory used to create the controller for testing purposes.",
            "itemtype": "method",
            "name": "createController",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the controller",
                    "type": "String"
                },
                {
                    "name": "attributes",
                    "description": "Controller attributes",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "return": {
                "description": "",
                "type": "Controller"
            },
            "class": "Application",
            "module": "JSkit"
        },
        {
            "file": "src/application.js",
            "line": 78,
            "description": "Creates a fresh controller object with the original defaults",
            "static": 1,
            "itemtype": "method",
            "name": "create",
            "params": [
                {
                    "name": "attributes",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Controller"
            },
            "class": "ControllerFactory",
            "module": "JSkit"
        },
        {
            "file": "src/controller.js",
            "line": 25,
            "description": "Get the full event name for a given controller and action.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "actionEventName",
            "params": [
                {
                    "name": "controller",
                    "description": "object to check for the given action",
                    "type": "Object"
                },
                {
                    "name": "action",
                    "description": "name to look up on given controller",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Full event name for a given controller's action",
                "type": "String"
            },
            "class": "Controller",
            "module": "JSkit"
        },
        {
            "file": "src/controller.js",
            "line": 43,
            "description": "Normalize object and string actions into an array of tuples.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "normalizeActions",
            "params": [
                {
                    "name": "controller",
                    "description": "whose actions you wish to normalize",
                    "type": "Object"
                }
            ],
            "class": "Controller",
            "module": "JSkit"
        },
        {
            "file": "src/controller.js",
            "line": 56,
            "description": "Normalize the given action into an action object.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "normalizeAction",
            "params": [
                {
                    "name": "action",
                    "description": "you wish to normalize",
                    "type": "String"
                }
            ],
            "return": {
                "description": "array of normalized action objects",
                "type": "Array"
            },
            "class": "Controller",
            "module": "JSkit"
        },
        {
            "file": "src/controller.js",
            "line": 68,
            "description": "Create an action object from the given method and action.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "createActionObject",
            "params": [
                {
                    "name": "method",
                    "description": "associated with the given action",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "of the given action",
                    "type": "String"
                }
            ],
            "return": {
                "description": "object with the name and method of the given action",
                "type": "Object"
            },
            "class": "Controller",
            "module": "JSkit"
        },
        {
            "file": "src/controller.js",
            "line": 81,
            "description": "Throw an error if the action method is not defined on the given controller.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "ensureActionIsDefined",
            "params": [
                {
                    "name": "controller",
                    "description": "to ensure has the given action method",
                    "type": "Object"
                },
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Srtring"
                }
            ],
            "class": "Controller",
            "module": "JSkit"
        },
        {
            "file": "src/controller.js",
            "line": 95,
            "description": "Register all the action for a given controller.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "registerActions",
            "params": [
                {
                    "name": "controller",
                    "description": "to register actions on",
                    "type": "Object"
                }
            ],
            "class": "Controller",
            "module": "JSkit"
        },
        {
            "file": "src/controller.js",
            "line": 109,
            "description": "Normalize the element objects for a given controller.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "normalizeControllerElements",
            "params": [
                {
                    "name": "controller",
                    "description": "to normalize elements of",
                    "type": "Object"
                }
            ],
            "class": "Controller",
            "module": "JSkit"
        },
        {
            "file": "src/controller.js",
            "line": 123,
            "description": "Normalize the given elements to a common format.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "normalizeElements",
            "params": [
                {
                    "name": "elements",
                    "description": "object to normalize",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "normalized elements object",
                "type": "Object"
            },
            "class": "Controller",
            "module": "JSkit"
        },
        {
            "file": "src/controller.js",
            "line": 139,
            "description": "Normalize the event for a given controller.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "normalizeControllerEvents",
            "params": [
                {
                    "name": "controller",
                    "description": "controller  with which to register events",
                    "type": "Object"
                }
            ],
            "class": "Controller",
            "module": "JSkit"
        },
        {
            "file": "src/controller.js",
            "line": 154,
            "description": "Normalize the given events into a common format.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "normalizeEvents",
            "params": [
                {
                    "name": "elements",
                    "description": "object of events to normalize",
                    "type": "Object"
                }
            ],
            "class": "Controller",
            "module": "JSkit"
        },
        {
            "file": "src/dispatcher.js",
            "line": 10,
            "description": "Get all handler functions for a given dispatcher and event.",
            "itemtype": "method",
            "name": "getEventHandlers",
            "params": [
                {
                    "name": "dispatcher",
                    "description": "",
                    "type": "Dispatcher"
                },
                {
                    "name": "eventName",
                    "description": "event name for which you wish to find handlers",
                    "type": "String"
                }
            ],
            "return": {
                "description": "handler functions for the given event",
                "type": "Array"
            },
            "class": "Dispatcher",
            "module": "JSkit"
        },
        {
            "file": "src/dispatcher.js",
            "line": 23,
            "description": "Create a handler object that contains the context and handler function",
            "itemtype": "method",
            "name": "createHandlerObject",
            "params": [
                {
                    "name": "context",
                    "description": "`this` context for handler function (defaults to `null`)",
                    "type": "Object,Function"
                },
                {
                    "name": "handler",
                    "description": "function to handle event",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "handler object with `handler` and `context`",
                "type": "Object"
            },
            "class": "Dispatcher",
            "module": "JSkit"
        },
        {
            "file": "src/dispatcher.js",
            "line": 39,
            "description": "Add an event handler to the array of registered handlers.",
            "itemtype": "method",
            "name": "registerHandler",
            "params": [
                {
                    "name": "registeredHandlers",
                    "description": "registered handlers for an event",
                    "type": "Array"
                },
                {
                    "name": "eventHandler",
                    "description": "to handle event",
                    "type": "Function"
                },
                {
                    "name": "method",
                    "description": "method to add the handler to the array",
                    "type": "String",
                    "optional": true,
                    "optdefault": "\"push\""
                }
            ],
            "class": "Dispatcher",
            "module": "JSkit"
        },
        {
            "file": "src/dispatcher.js",
            "line": 55,
            "description": "Create a new Dispatcher object.",
            "static": 1,
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": "",
                "type": "Dispatcher"
            },
            "class": "Dispatcher",
            "module": "JSkit"
        },
        {
            "file": "src/dispatcher.js",
            "line": 66,
            "description": "Register a handler to a given event.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "eventName",
                    "description": "Name of the event",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "Function to handle the event",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "`this` context of the handler",
                    "type": "Controller",
                    "optional": true
                }
            ],
            "class": "Dispatcher",
            "module": "JSkit"
        },
        {
            "file": "src/dispatcher.js",
            "line": 80,
            "description": "Register a handler to a given event that will\nfire before the handlers registerd with `on`.",
            "itemtype": "method",
            "name": "before",
            "params": [
                {
                    "name": "eventName",
                    "description": "Name of the event",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "Function to handle the event",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "`this` context of the handler",
                    "type": "Controller",
                    "optional": true
                }
            ],
            "class": "Dispatcher",
            "module": "JSkit"
        },
        {
            "file": "src/dispatcher.js",
            "line": 95,
            "description": "Remove a handler from a given event.",
            "itemtype": "method",
            "name": "off",
            "params": [
                {
                    "name": "eventName",
                    "description": "Name of the event",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "Function to unbind from the `event`",
                    "type": "Function"
                }
            ],
            "class": "Dispatcher",
            "module": "JSkit"
        },
        {
            "file": "src/dispatcher.js",
            "line": 115,
            "description": "Trigger a given event, causing all handlers\nfor that event to be fired.",
            "itemtype": "method",
            "name": "trigger",
            "params": [
                {
                    "name": "eventName",
                    "description": "Name of the event",
                    "type": "String"
                }
            ],
            "class": "Dispatcher",
            "module": "JSkit"
        },
        {
            "file": "src/jskit.js",
            "line": 12,
            "description": "Returns a new Application object.",
            "static": 1,
            "itemtype": "method",
            "name": "createApplication",
            "return": {
                "description": "",
                "type": "Application"
            },
            "class": "JSkit",
            "module": "JSkit"
        }
    ],
    "warnings": [
        {
            "message": "param name missing: {Srtring}",
            "line": " src/controller.js:81"
        }
    ]
}